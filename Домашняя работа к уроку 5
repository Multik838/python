1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем. 
Об окончании ввода данных свидетельствует пустая строка.

with open("grocery_list.txt", "w", encoding="utf-8") as my:
    while True:
        a = input("Собираетесь в магазин? Напишите список покупок: ")
        my.write(f"{a}\n")
        if a == "":
            break
            
            
2. Создать текстовый файл (не программно), сохранить в нем несколько строк, выполнить подсчет количества строк, количества слов в каждой строке.

 
with open("text_3.txt", "r", encoding="utf-8") as my:
    a = my.readlines()
    print(f"Количество строк в исходном файле = {len(a)}")
    for el in range(len(a)):
        print(f"В строке № {el + 1} количество слов = {len(a[el].split())}")



3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов. 
Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников. 
Выполнить подсчет средней величины дохода сотрудников.

with open("text_3.txt", "r", encoding="utf-8") as my:
    inp_list = my.readlines()
    list_to_dict = dict((inp_list[i].split()[0],float(inp_list[i].split()[1])) for i in range(len(inp_list)))
    print(f"Сотрудники, чей оклад составляет < оклад менее 20000:")
    for key in list_to_dict:
        if list_to_dict.get(key) < 20000:
            print(f"{key}")
    average_fee = sum(list_to_dict.values())/len(list_to_dict)
    print(f"\nСредняя величина дохода сотрудников составляет:\n{average_fee}")
    
    
 from translate import Translator
with open("text_4.txt", "r", encoding="utf-8") as my:
    a = my.readlines()

# перевод с помощью translate (бесплатная версия действует ограниченное кол-во раз в сутки :(()
out_f = open("translator.txt", "w", encoding="utf-8")
for el in a:
    b = el.split()
    translator = Translator(to_lang="Russian")
    b[0] = translator.translate(b[0])
    с = " ".join(b)
    out_f.write(f"{с}\n")
out_f.close()

# перевод с помощью цикла (если лимит translate закончился)
# out_f = open("translator.txt", "w", encoding="utf-8")
# for el in a:
#     print(a)
#     b = el.split()
#     if b[0] == 'One':
#         b[0] = 'Один'
#     elif b[0] == 'Two':
#         b[0] = 'Два'
#     elif b[0] == 'Three':
#         b[0] = 'Три'
#     elif b[0] == 'Four':
#         b[0] = 'Четыре'
#     с = " ".join(b)
#     out_f.write(f"{с}\n")
# out_f.close()


4. Создать (не программно) текстовый файл со следующим содержимым:
One — 1
Two — 2
Three — 3
Four — 4
Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные. 
При этом английские числительные должны заменяться на русские. Новый блок строк должен записываться в новый текстовый файл.


from translate import Translator
with open("text_4.txt", "r", encoding="utf-8") as my:
    a = my.readlines()

# перевод с помощью translate (бесплатная версия действует ограниченное кол-во раз в сутки :(()
out_f = open("translator.txt", "w", encoding="utf-8")
for el in a:
    b = el.split()
    translator = Translator(to_lang="Russian")
    b[0] = translator.translate(b[0])
    с = " ".join(b)
    out_f.write(f"{с}\n")
out_f.close()


5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами. 
Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.


import random
my_list = list(random.randint(5, 40) for i in range(10))
with open("numbers.txt", "w+", encoding="utf-8") as my:
    for el in range(len(my_list)):
        if el == 0:
            my.write(str(my_list[el]))
        else:
            my.write(" " + str(my_list[el]))
    my.seek(0)
    a = my.read().split()
    sum_num = 0
    for el in a:
        sum_num += int(el)
    print(f"Сумма чисел в файле = {sum_num}")
    
    
  6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие лекционных, 
  практических и лабораторных занятий по этому предмету и их количество. Важно, чтобы для каждого предмета не обязательно были все типы занятий. 
  Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести словарь на экран.
  
  Примеры строк файла:
Информатика: 100(л) 50(пр) 20(лаб).
Физика: 30(л) — 10(лаб)
Физкультура: — 30(пр) —

Пример словаря:
{“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}


def sum_digit(stroka):
    index = 0
    while index < len(stroka):
        if stroka[index].isdigit() or stroka[index] == " ":
            index += 1
        else:
            stroka = stroka.replace(stroka[index], ' ')
    stroka_split = stroka.split()
    for index in range(len(stroka_split)):
        stroka_split[index] = int(stroka_split[index])
    return sum(stroka_split)


with open("text_6.txt", "r", encoding="utf-8") as my:
    inp_list = my.readlines()
    print(inp_list)
    list_to_dict = dict((inp_list[i].split(":")[0], sum_digit(inp_list[i].split(":")[1])) for i in range(len(inp_list)))
    print(list_to_dict)
    
   
7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме: название, форма собственности, выручка, издержки.
Пример строки файла: firm_1 ООО 10000 5000.
Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. 
Если фирма получила убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью. 
Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]

Подсказка: использовать менеджеры контекста.


import json
with open("text_7.txt", "r", encoding="utf-8") as inp_file:
    inp_list = inp_file.readlines()
    print(inp_list)
profit = [int(inp_list[index].split()[2]) - int(inp_list[index].split()[3]) for index in range(len(inp_list))]
print(f"Прибыль каждой компании соответственно: {profit}")
average_profit = 0
count = 0
for el in profit:
    if el >= 0:
        average_profit += el
        count += 1
if count != 0:
    average_profit /= count
print(f"Средняя прибыль = {average_profit}")
out_list = [{inp_list[index].split()[0]: profit[index] for index in range(len(inp_list))},
            {"average_profit": average_profit}]
print(out_list)
with open("7_json.json", "w", encoding="utf-8") as out_file:
    json.dump(out_list, out_file, ensure_ascii=False, indent=4)
